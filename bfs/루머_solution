#include <iostream>
#include <vector>
#include<queue>
using namespace std;
vector<int> solution(int N, vector<vector<int>> adj, int M, vector<int> first_Infected) {
	
	vector<int> answer(N+1, -1);
	queue<int> q;
	
	vector<int>time(N+1,0);

	//루머를 믿기까지 필요한 시간
	for (int i = 1; i <= N; i++) {

		/*if (adj[i].size() % 2 == 1) { //홀수이면

			time[i] =( adj[i].size() / 2)+1;

		}
		else {//짝수이면 

			time[i] = adj[i].size() / 2;

		}
		*/
		time[i] = adj[i].size() / 2; // adj 배열에 0이 들어가서 짝수,홀수 모두 그냥 /2 해야함
	}

	for (int i = 0; i < M; i++) {
		
		answer[first_Infected[i]] = 0; //최초 유포자 시각은 0
		q.push(first_Infected[i]);
		
	}

	while (!q.empty()) { //큐에는 유포자가 된 사람이 들어감 
		int curr = q.front();
		q.pop();


		for (int j = 0; j < adj[curr].size(); j++) {

			//0번은 지나가기 
			if (adj[curr][j] == 0)continue;

			time[adj[curr][j]]--;

			//time이 0이 이하가 되면 루머를 믿게 됨, 이미 들어간건 처리x
			if (time[adj[curr][j]] <= 0 && answer[adj[curr][j]] == -1) { //탐색 
				//루머를 믿기 시작한 시간 계산? 
				answer[adj[curr][j]] = answer[curr] + 1;
				q.push(adj[curr][j]);
				
			}


		}



	}
	

	return answer;

}

int main() {

	vector<vector<int>>adj;
	adj = { {0},{2,3,0},{1,3,0},{1,2,4,0},{3,5,0},{4,0},{0},{0} };
	vector<int>first = { 1,6 };

	vector<int> ans;
	ans = solution(7, adj, 2, first);

	for (int i =1 ; i <= 7; i++) {
		cout << ans[i] << ' ';
	}



	return 0;
}
