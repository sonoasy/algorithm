#include <iostream>
#include<vector>
using namespace std;

//계수 벡터
vector<long long> v;
int num[4] = { 0 };
long long result = 0; // 연산 결과
int n;
long long maxs = -1000000001;
long long mins = 1000000001;
void go(int res,int indx) {//number째 연산 -> idx로 표현 가능, 누적 결과
	
	
	if (indx == n) {
		//연산 끝남 
		if (res > maxs) {
			maxs = res;
		}
		if (res < mins) {
			mins = res;
		}

		return;

	}
	
	
	for (int i = 0; i < 4; i++) {
		
		if (num[i] > 0) {
			//공통된거니까 밖으로 빼기
			num[i]--;
			if (i == 0) {
				//겹치지 않으려면 괄호에 그냥 넣기
				go(res+v[indx], indx+1);
			}
			else if (i == 1) {
				
				go(res - v[indx] , indx+1);
			}
			else if (i == 2) {
			
				go(res* v[indx], indx+1);
			}
			else if (i == 3) {
				//if (res < 0) {
				//	res = (-1)*(abs(res) / v[indx ]);

				//}
				//else {
				//	res/= v[indx];

				//}
				go(res/ v[indx], indx + 1);
			}
			//매우 중요!!!
			//다른데서도 연산자 공통되게 사용하니까 값 돌려놓아야함 계수배열처럼
			num[i]++;


		}


	}

	return;

}





int main() {
	//백준 14888번
	
	ios_base::sync_with_stdio(0);
	cin.tie(0), cout.tie(0);


	//연산의 결과 최대,최소 구하기
	//연산은 우선순위 무시하고 앞에서부터 실행, 
	

	//음수의 나눗셈: 양수로 바꾸고 몫을 음수로 바꾸기 

	cin>>n; //계수 
	v.assign(n, 0);
	for (int i = 0; i < n; i++) {
		cin >> v[i];
	}
	for (int i = 0; i < 4; i++) {
		cin >> num[i]; //덧셈,뺄셈,곱셈,나눗셈 갯수, 갯수 합은 n-1
	}
	
	go(v[0],1);
	cout << maxs<<'\n';
	cout << mins;


}
