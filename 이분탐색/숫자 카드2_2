#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include<string.h>
#include<string>
#include<stdio.h>
#include<vector>
#include<algorithm>
#define MAX 500000
using namespace std;

vector<int> a;

int lowerbound(int start,int end,int e) {
	//가장 앞에있는거 찾기
	
	while (1) {
		int mid = (start + end) / 2;
		if (start > end) {
			//끝나는 시점
			if (a[start] == e)return start; //찾음
			else return -1; //못찾음
		}
		if (e <= a[mid]) { //작은게 있는지
			end = mid-1; //이부분이 mid-1
		}
		else {
			start = mid + 1;
		}

	}

}
int upperbound(int start,int end,int e) {
	//가장 맨뒤에 있는거 찾기
	while (1) {
		int mid = (start + end) / 2;
		if (start > end) {
			//끝나는 시점
			if (a[end] == e)return end; //찾음
			else return -1; //못찾음

		}
		if (e >= a[mid]) { //큰위치에 있는지 계속 확인
			start = mid+1;//이부분이 mid+1 
		}
		else {
			end = mid - 1;
		}

	}


}


int main() {
	
	ios::sync_with_stdio(false);
	cin.tie(0);
	//백준 10816
	int n,s;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> s;
		a.push_back(s); //카드에 적혀있는 숫자
	}
	sort(a.begin(), a.end());
	int m,k;
	cin >> m;
	for (int i = 0; i < m; i++) {
		cin >> k;
		if (upperbound(0,n-1,k) == -1)cout << "0 ";
		//각 숫자가 a배열에 몇개 있는지 출력
		else cout << upperbound(0,n-1, k)- lowerbound(0,n-1, k)+1<<" ";

	}




}

