#include <string>
#include <vector>
#include<set>
using namespace std;
//*일땐 넘어가고 끝까지 갈수 있는지 체크
//함수 내에서 바뀌는 값 저장하는거 안되면 전역으로 선언

//프로그래머스64064

//시작 인덱스
set<string> dfs(int start,vector<string> user_id,vector<string> banned_str,int *check,set<string>s){
    //각 제재 아이디당 후보 다고름
    if(start==banned_str.size()){
        string str2="";
        for(int i=0;i<user_id.size();i++){
            if(check[i]==1){
                str2+=i;
            }
        }   
        s.insert(str2);
                
        return s;
    }   
    int len=banned_str[start].size();
    
    for(int i=0;i<user_id.size();i++){
        int flag=1;
        if(check[i]==1){
           continue;
        }//각 문자열에 대해 조사
        if(user_id[i].size()!=len){
           continue;
        }
        for(int j=0;j<user_id[i].size();j++){
            if((user_id[i][j]==banned_str[start][j])||(banned_str[start][j]=='*')){
                    
                 
                    continue;
            }
            else{
                    flag=0;
                    break;
            }
                
          
              
        }
        //여기서 str 과 check[i]=0안했을때
        if(flag==1){
            //이 문자열은 후보로 씀
            check[i]=1;
            
            s=dfs(start+1,user_id,banned_str,check,s);
            check[i]=0; //그래야 그다음 문자열부터 새로 씀
        }
    }
    return s;

}

//user_id 아이디 목록, banned_id 별표 처리된 목록
int solution(vector<string> user_id, vector<string> banned_id) {
    //각 banned_id 마다 갯수 세기
    int answer=0;
    set<string> s;
    int check[8]={0,0,0,0,0,0,0,0};
    s=dfs(0,user_id,banned_id,check,s);
    answer=s.size();
       
     
    return answer;
}
