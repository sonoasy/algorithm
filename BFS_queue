#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
#include<queue>

using namespace std;


//너비우선 탐색

void BFS(int start,vector<int>graph[],bool check[]) {
	queue <int>q;  //queue 생성
	q.push(start);     //queue 초기화
	check_bfs[start] = true;  

	while (!q.empty()) {
		int current = q.front();
		q.pop();
		printf("%d ", current);

		for (int i = 0; i < graph[current].size(); i++) {
			int next = graph[current][i];

			if (!check_bfs[next]) {
				check_bfs[next] = true;
				q.push(next);
			}

		}

	}

}

int main() {
 
	int n, m, start;
	cin >> n >> m >> start;
	vector<int> graph[n + 1];
	bool check[n + 1];
	fill(check, check + n + 1, false);

	for (int i = 0; i < m; i++) {
		int u, v;
		cin >> u >> v;

		graph[u].push_back(v);
		graph[v].push_back(u);

	}
	for (int i = 1; i <= n; i++) {
		sort(graph[i].begin(), graph[i].end());
	}
	BFS(start,graph,check);
	printf("\n");
	
	return 0;
	
}
